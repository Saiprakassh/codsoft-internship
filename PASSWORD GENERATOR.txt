import random
import string
import pyperclip

def generate_password(length, use_lowercase, use_uppercase, use_digits, use_special):
    characters = ''
    if use_lowercase:
        characters += string.ascii_lowercase
    if use_uppercase:
        characters += string.ascii_uppercase
    if use_digits:
        characters += string.digits
    if use_special:
        characters += string.punctuation
    
    if not characters:
        raise ValueError("No character types selected for password generation.")

    password = ''.join(random.choice(characters) for i in range(length))
    return password

def save_password(password):
    with open("generated_passwords.txt", "a") as file:
        file.write(f"{password}\n")

def main():
    while True:
        try:
            length = int(input("Enter the desired length for the password: "))
            if length <= 0:
                print("Password length should be a positive integer.")
                continue

            use_lowercase = input("Include lowercase letters? (y/n): ").lower() == 'y'
            use_uppercase = input("Include uppercase letters? (y/n): ").lower() == 'y'
            use_digits = input("Include digits? (y/n): ").lower() == 'y'
            use_special = input("Include special characters? (y/n): ").lower() == 'y'

            password = generate_password(length, use_lowercase, use_uppercase, use_digits, use_special)

            print(f"Generated Password: {password}")

            # Copy to clipboard
            pyperclip.copy(password)
            print("Password copied to clipboard.")

            # Save the password to a file
            save_password(password)
            print("Password saved to 'generated_passwords.txt'.")

            # Ask if the user wants to generate another password
            another = input("Would you like to generate another password? (y/n): ").lower()
            if another != 'y':
                break

        except ValueError as ve:
            print(f"Error: {ve}")
        except Exception as e:
            print(f"An unexpected error occurred: {e}")

if __name__ == "__main__":
    main()
